diff --git a/vmmon-only/linux/driver.c b/vmmon-only/linux/driver.c
index 1905aa4..d06956f 100644
--- a/vmmon-only/linux/driver.c
+++ b/vmmon-only/linux/driver.c
@@ -96,7 +96,9 @@ long LinuxDriver_Ioctl(struct file *filp, u_int iocmd,
                        unsigned long ioarg);

 static int LinuxDriver_Close(struct inode *inode, struct file *filp);
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 11, 0)
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0)
+static vm_fault_t LinuxDriverFault(struct vm_fault *fault);
+#elif LINUX_VERSION_CODE >= KERNEL_VERSION(4, 11, 0)
 static int LinuxDriverFault(struct vm_fault *fault);
 #else
 static int LinuxDriverFault(struct vm_area_struct *vma, struct vm_fault *fault);
@@ -594,7 +596,11 @@ LinuxDriver_Close(struct inode *inode, // IN
  *-----------------------------------------------------------------------------
  */

+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 1, 0)
+static vm_fault_t
+#else
 static int
+#endif
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 11, 0)
 LinuxDriverFault(struct vm_fault *fault)     //IN/OUT
 #else
diff --git a/vmmon-only/linux/hostif.c b/vmmon-only/linux/hostif.c
index 636890b..4ce415a 100644
--- a/vmmon-only/linux/hostif.c
+++ b/vmmon-only/linux/hostif.c
@@ -2180,7 +2180,7 @@ isVAReadable(VA r)  // IN:
    int ret;

    old_fs = get_fs();
-   set_fs(get_ds());
+   set_fs(KERNEL_DS);
    r = APICR_TO_ADDR(r, APICR_VERSION);
    ret = HostIF_CopyFromUser(&dummy, r, sizeof dummy);
    set_fs(old_fs);
@@ -2381,7 +2381,7 @@ HostIF_SemaphoreWait(VMDriver *vm,   // IN:
    }

    old_fs = get_fs();
-   set_fs(get_ds());
+   set_fs(KERNEL_DS);

    {
       struct poll_wqueues table;
@@ -2510,7 +2510,7 @@ HostIF_SemaphoreSignal(uint64 *args)  // IN:
    }

    old_fs = get_fs();
-   set_fs(get_ds());
+   set_fs(KERNEL_DS);

    /*
     * Always write sizeof(uint64) bytes. This works fine for eventfd and
@@ -3350,4 +3350,3 @@ HostIF_SafeRDMSR(unsigned int msr,   // IN

    return err;
 }
-
