diff --git a/vmmon-only/Makefile b/vmmon-only/Makefile
index ccdd295..b4b71fb 100644
--- a/vmmon-only/Makefile
+++ b/vmmon-only/Makefile
@@ -107,7 +107,7 @@ prebuild:: ;
 postbuild:: ;

 $(DRIVER_KO): prebuild
-	$(MAKE) -C $(BUILD_DIR) SUBDIRS=$$PWD SRCROOT=$$PWD/$(SRCROOT) \
+	$(MAKE) -C $(BUILD_DIR) M=$$PWD SRCROOT=$$PWD/$(SRCROOT) \
 	  MODULEBUILDDIR=$(MODULEBUILDDIR) modules
 	$(MAKE) -C $$PWD SRCROOT=$$PWD/$(SRCROOT) \
 	  MODULEBUILDDIR=$(MODULEBUILDDIR) postbuild
diff --git a/vmmon-only/linux/hostif.c b/vmmon-only/linux/hostif.c
index b793539..636890b 100644
--- a/vmmon-only/linux/hostif.c
+++ b/vmmon-only/linux/hostif.c
@@ -1494,6 +1494,9 @@ unsigned int
 HostIF_EstimateLockedPageLimit(const VMDriver* vm,                // IN
                                unsigned int currentlyLockedPages) // IN
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 0, 0)
+   unsigned int totalPhysicalPages = totalram_pages();
+#else
    /*
     * This variable is available and exported to modules,
     * since at least 2.6.0.
@@ -1502,6 +1505,7 @@ HostIF_EstimateLockedPageLimit(const VMDriver* vm,                // IN
    extern unsigned long totalram_pages;

    unsigned int totalPhysicalPages = totalram_pages;
+#endif

    /*
     * Use the memory information linux exports as of late for a more
@@ -1599,6 +1603,18 @@ HostIF_WaitForFreePages(unsigned int timeoutMs)  // IN:
 }


+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 0, 0)
+static void do_gettimeofday(struct timeval *tv)
+{
+   struct timespec now;
+
+   getnstimeofday(&now);
+   tv->tv_sec = now.tv_sec;
+   tv->tv_usec = now.tv_nsec / 1000;
+}
+#endif
+
+
 /*
  *----------------------------------------------------------------------
  *
@@ -3200,7 +3216,11 @@ HostIF_MapUserMem(VA addr,                  // IN: User memory virtual address

    ASSERT(handle);

+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 0, 0)
+   if (!access_ok(p, size)) {
+#else
    if (!access_ok(VERIFY_WRITE, p, size)) {
+#endif
       printk(KERN_ERR "%s: Couldn't verify write to uva 0x%p with size %"
              FMTSZ"u\n", __func__, p, size);

diff --git a/vmnet-only/Makefile b/vmnet-only/Makefile
index caab6b9..c2fc51f 100644
--- a/vmnet-only/Makefile
+++ b/vmnet-only/Makefile
@@ -107,7 +107,7 @@ prebuild:: ;
 postbuild:: ;

 $(DRIVER_KO): prebuild
-	$(MAKE) -C $(BUILD_DIR) SUBDIRS=$$PWD SRCROOT=$$PWD/$(SRCROOT) \
+	$(MAKE) -C $(BUILD_DIR) M=$$PWD SRCROOT=$$PWD/$(SRCROOT) \
 	  MODULEBUILDDIR=$(MODULEBUILDDIR) modules
 	$(MAKE) -C $$PWD SRCROOT=$$PWD/$(SRCROOT) \
 	  MODULEBUILDDIR=$(MODULEBUILDDIR) postbuild
diff --git a/vmnet-only/userif.c b/vmnet-only/userif.c
index acc6ca6..4f28232 100644
--- a/vmnet-only/userif.c
+++ b/vmnet-only/userif.c
@@ -142,7 +142,11 @@ VNetUserIfMapPtr(VA uAddr,        // IN: pointer to user memory
                  struct page **p, // OUT: locked page
                  void **ptr)      // OUT: kernel mapped pointer
 {
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 0, 0)
+   if (!access_ok((void *)uAddr, size) ||
+#else
    if (!access_ok(VERIFY_WRITE, (void *)uAddr, size) ||
+#endif
        (((uAddr + size - 1) & ~(PAGE_SIZE - 1)) !=
         (uAddr & ~(PAGE_SIZE - 1)))) {
       return -EINVAL;
